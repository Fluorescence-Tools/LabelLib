cmake_minimum_required(VERSION 3.0.2)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/../cmake) # main (top) cmake dir
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake) # project specific cmake dir
set(CMAKE_CXX_STANDARD 14) # tODO move up to a general cmake config for all sub projects ?

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib") 
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib")

project("FlexLabel")

include(Common)

find_package(Git QUIET)
set (GIT_VERSION_STRING "version-unknown")
if(GIT_FOUND)
    include(GitDateVersion)
    gitDateVersionString(GIT_VERSION_STRING)
    message(STATUS "GIT version: ${GIT_VERSION_STRING}")
endif()
add_definitions("-DGIT_VERSION_STRING=\"${GIT_VERSION_STRING}\"")

find_package(Eigen3 3.2 QUIET NO_MODULE)
if (NOT TARGET Eigen3::Eigen)
        message(STATUS "Using thirdparty/Eigen")
        set(EIGEN3_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/thirdparty/eigen)
endif (NOT TARGET Eigen3::Eigen)
include_directories(${EIGEN3_INCLUDE_DIR})

find_package(pybind11 QUIET 2.2)
if(NOT pybind11_FOUND)
        message(STATUS "Using thirdparty/pybind11")
        add_subdirectory(${CMAKE_SOURCE_DIR}/thirdparty/pybind11 pybind11_bin)
endif(NOT pybind11_FOUND)


# This sets the include directory for the reference project. This is the -I flag in gcc.
# All the includes should be in this variable To add new directories to the include path,
# just add them in this list (after a space), or add an include_directories statement in a
# subdirectory's CMakeLists.
include_directories(
    ${PROJECT_SOURCE_DIR}/include
)

# Mac needed variables (adapt according to your needs)
set(CMAKE_MACOSX_RPATH ON)
#set(CMAKE_SKIP_BUILD_RPATH FALSE)
#set(CMAKE_BUILD_WITH_INSTALL_RPATH FALSE)
#set(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
#set(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

enable_testing()
add_subdirectory(src)
# add_subdirectory(doc)
add_subdirectory(test)
add_subdirectory(python)

#
# SYSTEM PACKAGING (RPM, TGZ, ...)
# _____________________________________________________________________________

include(CPackConfig)

#
# CMAKE PACKAGING (for other CMake projects to use this one easily)
# _____________________________________________________________________________

include(PackageConfigurator)
